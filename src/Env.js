// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var EMPTY, Node, UNDEFINED, WINDOW;

  UNDEFINED = jinter.UNDEFINED, WINDOW = jinter.WINDOW;

  Node = function(parent) {
    this.parent = parent;
    this.bindings = new Map;
  };

  Node.prototype.get = function(key) {
    if (this.bindings.has(key)) {
      return this.bindings.get(key);
    } else {
      return this.parent.get(key);
    }
  };

  Node.prototype.set = function(key, value) {
    if (this.bindings.has(key)) {
      this.bindings.set(key, value);
    } else {
      this.parent.set(key, value);
    }
  };

  Node.prototype.addEntry = function() {
    return new Node(this);
  };

  Node.prototype.addBinding = function(key, value) {
    return this.bindings.set(key, value);
  };

  Node.prototype.entryHas = function(key) {
    return this.bindings.has(key);
  };

  EMPTY = {
    get: function(key) {
      var fromWindow;
      fromWindow = WINDOW.get(key);
      if (fromWindow != null) {
        return fromWindow;
      } else {
        throw new Error("Could not find " + key);
      }
    },
    addEntry: function() {
      return new Node(EMPTY);
    },
    addBinding: function() {
      return new Node(EMPTY);
    }
  };

  if (window.jinter == null) {
    window.jinter = {};
  }

  window.jinter.EMPTY = EMPTY;

}).call(this);
