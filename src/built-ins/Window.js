// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var BOOLEAN, NATIVE_FUNCTION, NULL, NUMBER, OBJECT, STRING, UNDEFINED, WINDOW;

  OBJECT = jinter.OBJECT, UNDEFINED = jinter.UNDEFINED, NULL = jinter.NULL, BOOLEAN = jinter.BOOLEAN, NUMBER = jinter.NUMBER, STRING = jinter.STRING, NATIVE_FUNCTION = jinter.NATIVE_FUNCTION;

  WINDOW = new OBJECT(NULL);

  WINDOW.put('window', WINDOW);

  WINDOW.put('undefined', UNDEFINED);

  WINDOW.put('Object', jinter.OBJECT_FUNCTION);

  WINDOW.put('Map', jinter.MAP_FUNCTION);

  WINDOW.put('NaN', new NUMBER(NaN));

  WINDOW.put('isNaN', new NATIVE_FUNCTION(function(candidate) {
    return {
      "return": true,
      value: new BOOLEAN(isNaN(candidate.toNumber()))
    };
  }));

  WINDOW.put('parseFloat', new NATIVE_FUNCTION(function(candidate) {
    return {
      "return": true,
      value: new NUMBER(parseFloat(candidate.toString()))
    };
  }));

  WINDOW.put('parseInt', new NATIVE_FUNCTION(function(candidate, optionalBase) {
    var candidateValue, value;
    candidateValue = candidate.toString();
    value = (optionalBase != null) && optionalBase !== UNDEFINED ? parseInt(candidateValue, optionalBase.toNumber()) : parseInt(candidateValue);
    return {
      "return": true,
      value: value
    };
  }));

  WINDOW.put('Number', new NATIVE_FUNCTION(function(candidate) {
    return {
      "return": true,
      value: new NUMBER(candidate.toNumber())
    };
  }));

  WINDOW.put('Boolean', new NATIVE_FUNCTION(function(candidate) {
    return {
      "return": true,
      value: new BOOLEAN(candidate.toBoolean())
    };
  }));

  WINDOW.put('String', new NATIVE_FUNCTION(function(candidate) {
    return {
      "return": true,
      value: new STRING(candidate.toString())
    };
  }));

  if (window.jinter == null) {
    window.jinter = {};
  }

  window.jinter.WINDOW = WINDOW;

}).call(this);
