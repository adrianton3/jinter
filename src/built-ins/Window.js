// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var BOOLEAN, BOOLEAN_FUNCTION, NATIVE_FUNCTION, NULL, NUMBER, NUMBER_FUNCTION, OBJECT, STRING, STRING_FUNCTION, UNDEFINED, WINDOW;

  OBJECT = jinter.OBJECT, UNDEFINED = jinter.UNDEFINED, NULL = jinter.NULL, BOOLEAN = jinter.BOOLEAN, NUMBER = jinter.NUMBER, STRING = jinter.STRING, NUMBER_FUNCTION = jinter.NUMBER_FUNCTION, BOOLEAN_FUNCTION = jinter.BOOLEAN_FUNCTION, STRING_FUNCTION = jinter.STRING_FUNCTION, NATIVE_FUNCTION = jinter.NATIVE_FUNCTION;

  WINDOW = new OBJECT(NULL);

  WINDOW.put('window', WINDOW);

  WINDOW.put('undefined', UNDEFINED);

  WINDOW.put('Object', jinter.OBJECT_FUNCTION);

  WINDOW.put('Map', jinter.MAP_FUNCTION);

  WINDOW.put('Array', jinter.ARRAY_FUNCTION);

  WINDOW.put('Function', jinter.FUNCTION_FUNCTION);

  WINDOW.put('NaN', new NUMBER(NaN));

  WINDOW.put('isNaN', new NATIVE_FUNCTION(function(candidate) {
    return {
      "return": true,
      value: new BOOLEAN(isNaN(candidate.asNumber()))
    };
  }));

  WINDOW.put('parseFloat', new NATIVE_FUNCTION(function(candidate) {
    return {
      "return": true,
      value: new NUMBER(parseFloat(candidate.asString()))
    };
  }));

  WINDOW.put('parseInt', new NATIVE_FUNCTION(function(candidate, optionalBase) {
    var candidateValue, resultRaw;
    candidateValue = candidate.asString();
    resultRaw = (optionalBase != null) && optionalBase !== UNDEFINED ? parseInt(candidateValue, optionalBase.asNumber()) : parseInt(candidateValue);
    return {
      "return": true,
      value: new NUMBER(resultRaw)
    };
  }));

  WINDOW.put('Number', NUMBER_FUNCTION);

  WINDOW.put('Boolean', BOOLEAN_FUNCTION);

  WINDOW.put('String', STRING_FUNCTION);

  if (window.jinter == null) {
    window.jinter = {};
  }

  window.jinter.WINDOW = WINDOW;

}).call(this);
